from aiogram.methods.get_chat_member import GetChatMember, ChatMemberLeft
from aiogram import Router
from aiogram.filters import Command
from aiogram.filters import CommandObject, CommandStart
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.utils.deep_linking import decode_payload,create_start_link
from aiogram.exceptions import TelegramBadRequest
import phr
from loader import bot,db
from handlers import keyboards as kb
router = Router()

@router.message(Command("start"))
async def start(message:Message,command: CommandObject):
    #–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–µ
    if command.args:
        reff_code = decode_payload(command.args)

        refferal = db.get_refferal_by_code(int(reff_code))

        reff_settings = db.get_refferal_setting(refferal['reff_code'])
        if message.from_user.id != refferal['creator']:
            if message.from_user.id not in refferal['activators']:
                if reff_settings['only_new_user']:
                    if not db.get_user(message.from_user.id):
                        try:
                            is_subscribed = await bot.get_chat_member(chat_id=phr.tg_channel_id,
                                                                      user_id=message.from_user.id)
                            if is_subscribed.status != 'left':
                                db.activate_refferal(refferal['code'],message.from_user.id)
                                await message.answer('–í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º.')
                                db.create_user(fullname=message.from_user.full_name,user_id=message.from_user.id)
                                refferal = db.get_refferal_by_code(int(reff_code))
                                sender = db.get_user(refferal['creator'])
                                info = ''
                                if not reff_settings['per_user']:
                                    levels = sorted(list(map(int, list(reff_settings['levels']))))
                                    if len(refferal['activators']) <= levels[-1]:
                                        for lvl in levels:
                                            if int(lvl) == len(refferal['activators']):
                                                db.add_bonuses(sender['user_id'],
                                                               int(reff_settings['levels'][str(lvl)]))
                                                info = f'–í–∞–º –∑–∞—Å—á–∏—Å–ª–∏–ª–∏ {reff_settings["levels"][str(lvl)]} –±–æ–Ω—É—Å–æ–≤!!!!'
                                                if levels.index(lvl) != len(levels) - 1:
                                                    info += f'\n–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –Ω—É–∂–Ω–æ {int(levels[levels.index(lvl) + 1]) - len(refferal["activators"])}'
                                                    break
                                                else:
                                                    info += f'\n–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!!'

                                                break
                                            else:
                                                info += f'\n–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –Ω—É–∂–Ω–æ {int(levels[levels.index(lvl)]) - len(refferal["activators"])}'

                                else:
                                    db.add_bonuses(sender['user_id'], int(reff_settings['per_user_bonus']))
                                    info = f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ {reff_settings["per_user_bonus"]} –±–æ–Ω—É—Å–æ–≤!!'






                            else:
                                db.create_user(fullname=message.from_user.full_name, user_id=message.from_user.id)
                                await message.answer(
                                    text='–í—ã —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥. –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
                                    reply_markup=kb.get_refferal_kb(reff_code))

                        except TelegramBadRequest:
                            db.create_user(fullname=message.from_user.full_name,user_id=message.from_user.id)
                            await message.answer(text='–í—ã —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥. –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', reply_markup=kb.get_refferal_kb(reff_code))
                    else:
                        await message.answer('–î–∞–Ω–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
                else:
                    pass

            else:
                await message.answer('–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É')
        else:
            await message.answer(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—Ñ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É')
        # await message.answer(f'–í—ã –ø—Ä–æ—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {reff_id}', reply_markup=kb.main_kb_builder.as_markup(resize_keyboard=True))
    #–ü—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ä—Ç
    else:
        await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.full_name}! üéÅ\nÔ∏è–õ—é–±–∏—à—å —Å–∫–∏–¥–∫–∏ - –∂–º–∏ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üîù\n‚ùì–°–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –Ω–∞–∫–æ–ø–∏–ª–æ—Å—å - –∂–º–∏ –£–∑–Ω–∞—Ç—å —Å–∫–∏–¥–∫—É üëçüèª ',reply_markup=kb.main_kb_builder.as_markup(resize_keyboard=True))
        db.create_user(fullname=message.from_user.full_name,user_id=message.from_user.id)
        try:
            is_subscribed = await bot.get_chat_member(chat_id=phr.tg_channel_id,user_id=message.from_user.id)
            if is_subscribed.status == 'left':
                await message.answer(text=phr.please_subscribe, reply_markup=kb.channel_url_kb)


        except TelegramBadRequest:
            await message.answer(text=phr.please_subscribe,reply_markup=kb.channel_url_kb)
